lambda1=1E-3
F=c(1,1)
input_dat <- list(N=N, F=F, y=y,lambda1 = lambda1)
n_steps = 1E4
ss_fit <- sampling(ss_model, data = input_dat, iter = n_steps, chains = 1, algorithm = "NUTS")
post_theta<- extract(ss_fit,"theta")
plot(post_theta[[1]][,1],post_theta[[1]][,2])
n_steps = 1E4
eps = 0.01
ss_fit <- sampling(ss_model, data = input_dat, iter = n_steps,
chains = 1, algorithm = "HMC",
control=list(adapt_engaged = F,
stepsize= eps,
int_time = eps*10
))
eps = 0.01
ss_fit <- sampling(ss_model, data = input_dat, iter = n_steps,
chains = 1, algorithm = "HMC",
control=list(adapt_engaged = F,
stepsize= eps,
int_time = eps*10
))
n_steps = 1E4
eps = 0.01
ss_fit <- sampling(ss_model, data = input_dat, iter = n_steps,
chains = 1, algorithm = "HMC",
control=list("adapt_engaged" = F,
"stepsize"= eps,
"int_time" = eps*10
))
F
ss_fit <- sampling(ss_model, data = input_dat, iter = n_steps,
chains = 1, algorithm = "HMC",
control=list(adapt_engaged = FALSE,
stepsize= eps,
int_time = eps*10
))
post_theta<- extract(ss_fit,"theta")
plot(post_theta[[1]][,1],post_theta[[1]][,2])
ts.plot(post_theta[[1]][,1])
n_steps = 1E4
eps = 0.001
ss_fit <- sampling(ss_model, data = input_dat, iter = n_steps,
chains = 1, algorithm = "HMC",
control=list(adapt_engaged = FALSE,
stepsize= eps,
int_time = eps*10
))
post_theta<- extract(ss_fit,"theta")
ts.plot(post_theta[[1]][,1])
plot(post_theta[[1]][,1],post_theta[[1]][,2])
acf(post_theta[[1]][,1])
ts.plot(post_theta[[1]][,1])
plot(post_theta[[1]][,1],post_theta[[1]][,2])
n_steps = 1E4
eps = 0.005
ss_fit <- sampling(ss_model, data = input_dat, iter = n_steps,
chains = 1, algorithm = "HMC",
control=list(adapt_engaged = FALSE,
stepsize= eps,
int_time = eps*10
))
post_theta<- extract(ss_fit,"theta")
ts.plot(post_theta[[1]][,1])
plot(post_theta[[1]][,1],post_theta[[1]][,2])
n_steps = 1E4
eps = 0.001
ss_fit <- sampling(ss_model, data = input_dat, iter = n_steps,
chains = 1, algorithm = "HMC",
control=list(adapt_engaged = FALSE,
stepsize= eps,
int_time = eps*10
))
post_theta<- extract(ss_fit,"theta")
ts.plot(post_theta[[1]][,1])
plot(post_theta[[1]][,1],post_theta[[1]][,2])
ss_fit <- sampling(ss_model, data = input_dat, iter = n_steps,
chains = 1, algorithm = "HMC",
control=list(adapt_engaged = FALSE,
stepsize= eps,
int_time = eps*10
))
post_theta<- extract(ss_fit,"theta")
ts.plot(post_theta[[1]][,1])
plot(post_theta[[1]][,1],post_theta[[1]][,2])
ts.plot(post_theta[[1]][,1])
n_steps = 1E4
eps = 0.001
ss_fit <- sampling(ss_model, data = input_dat, iter = n_steps,
chains = 1, algorithm = "HMC",
control=list(adapt_engaged = FALSE,
stepsize= eps,
int_time = eps*10
))
post_theta<- extract(ss_fit,"theta")
ts.plot(post_theta[[1]][,1])
plot(post_theta[[1]][,1],post_theta[[1]][,2])
y
post_tau<- extract(ss_fit,"tau")
post_tau
ts.plot(post_tau)
ts.plot(post_tau[[1]])
N = 5
sd= 0.1
theta = c(sqrt(1/4),sqrt(3/4))
y= cbind(rnorm(N,theta[1],sd),rnorm(N,theta[2],sd))
plot(y[,1],y[,2],xlim=c(-2,2),ylim=c(-2,2))
lines(theta[1],theta[2],col="red",type="p")
lambda1=1E-3
F=c(1,1)
input_dat <- list(N=N, F=F, y=y,lambda1 = lambda1)
n_steps = 1E4
eps = 0.001
ss_fit <- sampling(ss_model, data = input_dat, iter = n_steps,
chains = 1, algorithm = "HMC",
control=list(adapt_engaged = FALSE,
stepsize= eps,
int_time = eps*10
))
post_theta<- extract(ss_fit,"theta")
post_tau<- extract(ss_fit,"tau")
ts.plot(post_theta[[1]][,1])
plot(post_theta[[1]][,1],post_theta[[1]][,2])
post_tau
post_tau
NUTS
n_steps = 1E4
eps = 0.001
ss_fit <- sampling(ss_model, data = input_dat, iter = n_steps,
chains = 1, algorithm = "HMC",
control=list(adapt_engaged = FALSE,
stepsize= eps,
int_time = eps
))
post_theta<- extract(ss_fit,"theta")
post_tau<- extract(ss_fit,"tau")
ts.plot(post_theta[[1]][,1])
plot(post_theta[[1]][,1],post_theta[[1]][,2])
acf(post_theta[[1]][,1])
eps = 0.1
ss_fit <- sampling(ss_model, data = input_dat, iter = n_steps,
chains = 1, algorithm = "HMC",
control=list(adapt_engaged = FALSE,
stepsize= eps,
int_time = eps
))
post_theta<- extract(ss_fit,"theta")
post_tau<- extract(ss_fit,"tau")
acf(post_theta[[1]][,1])
eps = 1E-3
ss_fit <- sampling(ss_model, data = input_dat, iter = n_steps,
chains = 1, algorithm = "HMC",
control=list(adapt_engaged = FALSE,
stepsize= eps,
int_time = eps
))
post_theta<- extract(ss_fit,"theta")
post_tau<- extract(ss_fit,"tau")
acf(post_theta[[1]][,1])
plot(post_theta[[1]][,1],post_theta[[1]][,2])
F
y
colMeans(y)
post_theta
plot(post_theta[[1]][,1],post_theta[[1]][,2])
ss_fit <- sampling(ss_model, data = input_dat, iter = n_steps,
chains = 1, algorithm = "HMC",
control=list(adapt_engaged = FALSE,
stepsize= eps,
int_time = eps
))
post_tau<- extract(ss_fit,"tau")
acf(post_theta[[1]][,1])
plot(post_theta[[1]][,1],post_theta[[1]][,2])
n_steps = 1E4
eps = 1E-3
ss_fit <- sampling(ss_model, data = input_dat, iter = n_steps,
chains = 1, algorithm = "HMC",
control=list(adapt_engaged = FALSE,
stepsize= eps,
int_time = eps
))
post_theta<- extract(ss_fit,"theta")
post_tau<- extract(ss_fit,"tau")
acf(post_theta[[1]][,1])
plot(post_theta[[1]][,1],post_theta[[1]][,2])
n_steps = 1E4
eps = 1E-3
ss_fit <- sampling(ss_model, data = input_dat, iter = n_steps,
chains = 1, algorithm = "HMC",
control=list(adapt_engaged = FALSE,
stepsize= eps,
int_time = eps
))
post_theta<- extract(ss_fit,"theta")
post_tau<- extract(ss_fit,"tau")
acf(post_theta[[1]][,1])
plot(post_theta[[1]][,1],post_theta[[1]][,2])
n_steps = 1E4
eps = 1E-3
ss_fit <- sampling(ss_model, data = input_dat, iter = n_steps,
chains = 1, algorithm = "HMC",
control=list(adapt_engaged = FALSE,
stepsize= eps,
int_time = eps
))
post_theta<- extract(ss_fit,"theta")
post_tau<- extract(ss_fit,"tau")
acf(post_theta[[1]][,1])
plot(post_theta[[1]][,1],post_theta[[1]][,2])
n_steps = 1E4
eps = 1E-3
ss_fit <- sampling(ss_model, data = input_dat, iter = n_steps,
chains = 1, algorithm = "HMC",
control=list(adapt_engaged = FALSE,
stepsize= eps,
int_time = eps
))
post_theta<- extract(ss_fit,"theta")
post_tau<- extract(ss_fit,"tau")
acf(post_theta[[1]][,1])
plot(post_theta[[1]][,1],post_theta[[1]][,2])
n_steps = 1E4
eps = 1E-3
ss_fit <- sampling(ss_model, data = input_dat, iter = n_steps,
chains = 1, algorithm = "HMC",
control=list(adapt_engaged = FALSE,
stepsize= eps,
int_time = eps
))
post_theta<- extract(ss_fit,"theta")
post_tau<- extract(ss_fit,"tau")
acf(post_theta[[1]][,1])
plot(post_theta[[1]][,1],post_theta[[1]][,2])
n_steps = 1E4
eps = 1E-3
ss_fit <- sampling(ss_model, data = input_dat, iter = n_steps,
chains = 1, algorithm = "HMC",
control=list(adapt_engaged = FALSE,
stepsize= eps,
int_time = eps
))
post_theta<- extract(ss_fit,"theta")
post_tau<- extract(ss_fit,"tau")
acf(post_theta[[1]][,1])
plot(post_theta[[1]][,1],post_theta[[1]][,2])
n_steps = 1E4
eps = 1E-3
ss_fit <- sampling(ss_model, data = input_dat, iter = n_steps,
chains = 1, algorithm = "HMC",
control=list(adapt_engaged = FALSE,
stepsize= eps,
int_time = eps
))
post_theta<- extract(ss_fit,"theta")
post_tau<- extract(ss_fit,"tau")
acf(post_theta[[1]][,1])
plot(post_theta[[1]][,1],post_theta[[1]][,2])
n_steps = 1E4
eps = 1E-3
ss_fit <- sampling(ss_model, data = input_dat, iter = n_steps,
chains = 1, algorithm = "HMC",
control=list(adapt_engaged = FALSE,
stepsize= eps,
int_time = eps
))
post_theta<- extract(ss_fit,"theta")
post_tau<- extract(ss_fit,"tau")
acf(post_theta[[1]][,1])
plot(post_theta[[1]][,1],post_theta[[1]][,2])
n_steps = 1E4
eps = 1E-3
ss_fit <- sampling(ss_model, data = input_dat, iter = n_steps,
chains = 1, algorithm = "HMC",
control=list(adapt_engaged = FALSE,
stepsize= eps,
int_time = eps
))
post_theta<- extract(ss_fit,"theta")
post_tau<- extract(ss_fit,"tau")
acf(post_theta[[1]][,1])
plot(post_theta[[1]][,1],post_theta[[1]][,2])
n_steps = 1E4
eps = 1E-3
ss_fit <- sampling(ss_model, data = input_dat, iter = n_steps,
chains = 1, algorithm = "HMC",
control=list(adapt_engaged = FALSE,
stepsize= eps,
int_time = eps
))
post_theta<- extract(ss_fit,"theta")
post_tau<- extract(ss_fit,"tau")
acf(post_theta[[1]][,1])
plot(post_theta[[1]][,1],post_theta[[1]][,2])
N = 100
sd= 0.1
theta = c(sqrt(1/4),sqrt(3/4))
y= cbind(rnorm(N,theta[1],sd),rnorm(N,theta[2],sd))
plot(y[,1],y[,2],xlim=c(-2,2),ylim=c(-2,2))
lines(theta[1],theta[2],col="red",type="p")
lambda1=1E-3
F=c(1,1)
input_dat <- list(N=N, F=F, y=y,lambda1 = lambda1)
n_steps = 1E4
eps = 1E-3
ss_fit <- sampling(ss_model, data = input_dat, iter = n_steps,
chains = 1, algorithm = "HMC",
control=list(adapt_engaged = FALSE,
stepsize= eps,
int_time = eps
))
post_theta<- extract(ss_fit,"theta")
post_tau<- extract(ss_fit,"tau")
acf(post_theta[[1]][,1])
plot(post_theta[[1]][,1],post_theta[[1]][,2])
ss_fit <- sampling(ss_model, data = input_dat, iter = n_steps,
chains = 1, algorithm = "NUTS")
post_theta<- extract(ss_fit,"theta")
post_tau<- extract(ss_fit,"tau")
acf(post_theta[[1]][,1])
plot(post_theta[[1]][,1],post_theta[[1]][,2])
theta
acf(post_theta[[1]][,1])
plot(post_theta[[1]][,1],post_theta[[1]][,2])
n_steps = 1E4
eps = 1E-3
ss_fit <- sampling(ss_model, data = input_dat, iter = n_steps,
chains = 1, algorithm = "HMC",
control=list(adapt_engaged = FALSE,
stepsize= eps,
int_time = eps
))
post_theta<- extract(ss_fit,"theta")
post_tau<- extract(ss_fit,"tau")
acf(post_theta[[1]][,1])
plot(post_theta[[1]][,1],post_theta[[1]][,2])
post_theta<- extract(ss_fit,"theta")
post_tau<- extract(ss_fit,"tau")
acf(post_theta[[1]][,1])
plot(post_theta[[1]][,1],post_theta[[1]][,2])
ss_fit <- sampling(ss_model, data = input_dat, iter = n_steps,
chains = 1, algorithm = "HMC",
control=list(adapt_engaged = FALSE,
stepsize= eps,
int_time = eps*10
))
post_theta<- extract(ss_fit,"theta")
post_tau<- extract(ss_fit,"tau")
acf(post_theta[[1]][,1])
plot(post_theta[[1]][,1],post_theta[[1]][,2])
sampling_idx<- c((n_steps/2+1):n_steps)
post_U = extractPosteriorMat("U",N,d,"ss_fit")
post_theta<- extract(ss_fit,"theta")
post_tau<- extract(ss_fit,"tau")
acf(post_theta[[1]][,1])
plot(post_theta[[1]][,1],post_theta[[1]][,2])
n_steps = 1E4
eps = 1E-3
ss_fit <- sampling(ss_model, data = input_dat, iter = n_steps,
chains = 1, algorithm = "HMC",
control=list(adapt_engaged = FALSE,
stepsize= eps,
int_time = eps*10
))
n_steps = 1E4
eps = 1E-3
ss_fit <- sampling(ss_model, data = input_dat, iter = n_steps,
chains = 1, algorithm = "NUTS",
control=list(adapt_engaged = FALSE,
stepsize= eps,
int_time = eps*10
))
post_theta<- extract(ss_fit,"theta")
post_tau<- extract(ss_fit,"tau")
acf(post_theta[[1]][,1])
plot(post_theta[[1]][,1],post_theta[[1]][,2])
acf(post_theta[[1]][,1])
plot(post_theta[[1]][,1],post_theta[[1]][,2])
##### Data ###
N = 5
sd= 0.1
theta = c(sqrt(1/4),sqrt(3/4))
y= cbind(rnorm(N,theta[1],sd),rnorm(N,theta[2],sd))
plot(y[,1],y[,2],xlim=c(-2,2),ylim=c(-2,2))
lines(theta[1],theta[2],col="red",type="p")
lambda1=1E-3
F=c(1,1)
input_dat <- list(N=N, F=F, y=y,lambda1 = lambda1)
n_steps = 1E4
eps = 1E-3
ss_fit <- sampling(ss_model, data = input_dat, iter = n_steps,
chains = 1, algorithm = "NUTS",
control=list(adapt_engaged = TRUE,
stepsize= eps,
int_time = eps*10
))
post_theta<- extract(ss_fit,"theta")
post_tau<- extract(ss_fit,"tau")
acf(post_theta[[1]][,1])
plot(post_theta[[1]][,1],post_theta[[1]][,2])
acf(post_theta[[1]][,1])
plot(post_theta[[1]][,1],post_theta[[1]][,2])
post_theta<- extract(ss_fit,"theta")
post_tau<- extract(ss_fit,"tau")
acf(post_theta[[1]][,1])
plot(post_theta[[1]][,1],post_theta[[1]][,2])
ss_fit <- sampling(ss_model, data = input_dat, iter = n_steps,
chains = 1, algorithm = "NUTS",
control=list(adapt_engaged = TRUE,
stepsize= eps,
int_time = eps*10,
max_treedepth = 3
))
post_theta<- extract(ss_fit,"theta")
post_tau<- extract(ss_fit,"tau")
acf(post_theta[[1]][,1])
plot(post_theta[[1]][,1],post_theta[[1]][,2])
sampling_idx<- c((n_steps/2+1):n_steps)
ss_fit <- sampling(ss_model, data = input_dat, iter = n_steps,
chains = 1, algorithm = "NUTS",
control=list(adapt_engaged = TRUE,
stepsize= eps,
int_time = eps*10,
max_treedepth = 3
))
post_theta<- extract(ss_fit,"theta")
post_tau<- extract(ss_fit,"tau")
acf(post_theta[[1]][,1])
plot(post_theta[[1]][,1],post_theta[[1]][,2])
sampling_idx<- c((n_steps/2+1):n_steps)
post_U = extractPosteriorMat("U",N,d,"ss_fit")
ss_fit <- sampling(ss_model, data = input_dat, iter = n_steps,
chains = 1, algorithm = "NUTS",
control=list(adapt_engaged = TRUE,
stepsize= eps,
int_time = eps*10,
max_treedepth = 5
))
post_theta<- extract(ss_fit,"theta")
post_tau<- extract(ss_fit,"tau")
acf(post_theta[[1]][,1])
plot(post_theta[[1]][,1],post_theta[[1]][,2])
ss_fit <- sampling(ss_model, data = input_dat, iter = n_steps,
chains = 1, algorithm = "NUTS",
control=list(adapt_engaged = TRUE,
stepsize= eps,
int_time = eps*10,
max_treedepth = 10
))
post_theta<- extract(ss_fit,"theta")
post_tau<- extract(ss_fit,"tau")
acf(post_theta[[1]][,1])
plot(post_theta[[1]][,1],post_theta[[1]][,2])
2^5
ss_fit <- sampling(ss_model, data = input_dat, iter = n_steps,
chains = 1, algorithm = "NUTS",
control=list(adapt_engaged = TRUE,
stepsize= eps,
int_time = eps*10,
max_treedepth = 6
))
post_theta<- extract(ss_fit,"theta")
post_tau<- extract(ss_fit,"tau")
acf(post_theta[[1]][,1])
plot(post_theta[[1]][,1],post_theta[[1]][,2])
theta = c(sqrt(3/4),sqrt(1/4))
y= cbind(rnorm(N,theta[1],sd),rnorm(N,theta[2],sd))
plot(y[,1],y[,2],xlim=c(-2,2),ylim=c(-2,2))
lines(theta[1],theta[2],col="red",type="p")
lambda1=1E-3
F=c(1,1)
input_dat <- list(N=N, F=F, y=y,lambda1 = lambda1)
n_steps = 1E4
eps = 1E-3
ss_fit <- sampling(ss_model, data = input_dat, iter = n_steps,
chains = 1, algorithm = "NUTS",
control=list(adapt_engaged = TRUE,
stepsize= eps,
int_time = eps*10,
max_treedepth = 6
))
post_theta<- extract(ss_fit,"theta")
post_tau<- extract(ss_fit,"tau")
acf(post_theta[[1]][,1])
plot(post_theta[[1]][,1],post_theta[[1]][,2])
post_theta<- extract(ss_fit,"theta")
post_tau<- extract(ss_fit,"tau")
post_tau
ss_fit <- sampling(ss_model, data = input_dat, iter = n_steps,
chains = 1, algorithm = "NUTS",
control=list(adapt_engaged = TRUE,
stepsize= eps,
int_time = eps*10,
max_treedepth = 10
))
theta
theta = c(sqrt(3/4),sqrt(1/4))
y= cbind(rnorm(N,theta[1],sd),rnorm(N,theta[2],sd))
plot(y[,1],y[,2],xlim=c(-2,2),ylim=c(-2,2))
lines(theta[1],theta[2],col="red",type="p")
lambda1=1E-3
F=c(1,1)
input_dat <- list(N=N, F=F, y=y,lambda1 = lambda1)
n_steps = 1E4
eps = 1E-3
ss_fit <- sampling(ss_model, data = input_dat, iter = n_steps,
chains = 1, algorithm = "NUTS",
control=list(adapt_engaged = TRUE,
stepsize= eps,
int_time = eps*10,
max_treedepth = 10
))
